include:
   - 1_spatial.yml
   - 2_observations.yml
   - 3_drivers.yml
   - 4_forecasts.yml

packages:
  - yaml
  - dplyr
  - tidyr
  - meddle # at least v0.0.12
  - readr
  - feather
  - rgdal
  - stringr
  - sf
  - sbtools
  - dssecrets
  - scipiper
  - tidyverse

sources:
  - src/sb_utils.R
  - src/sb_functions.R
  - src/spatial_functions.R

targets:
  all:
    depends:
      - log/00_parent_sb.csv
      - log/01_spatial_sb_data.csv
      - log/02_observations_sb_data.csv
      - log/03_drivers_sb_data.csv
      - log/04_forecasts_sb_data.csv

## PARENT ##
  ## Build xml for parent item and save to out_xml folder
  out_xml/00_parent.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_00_parent.yml",
      geospatial_area_metadata
      )
  
  ## Push parent metadata xml to sb via log file 
  log/00_parent_sb.csv:
    command: sb_replace_files(
      filename = target_name,
      sb_id = sbid_00_parent,
      sources = 'src/sb_utils.R',
      'out_xml/00_parent.xml')

## SPATIAL ## 
  ## Build metadata xml for spatial data and save locally to out_xml
  out_xml/01_spatial.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_01_spatial.yml",
      geospatial_area_metadata
      )

  ### Push all spatial data + metadata xml to sb
  log/01_spatial_sb_data.csv:
    command: sb_replace_files(
      filename = target_name,
      sb_id = sbid_01_spatial,
      sources = "src/sb_utils.R",
      "out_data/XX_geospatial_area_WG84.zip",
      "out_xml/01_spatial.xml"
      )

## OBSERVATIONS ## 
  ## Build metadata xml for obs data and save locally to out_xml
  out_xml/02_observations.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_02_observations.yml",
      geospatial_area_metadata
      )
  
  ## Push all obs data + metadata xml to sb via log file 
  log/02_observations_sb_data.csv:
    command: sb_replace_files(
      filename = target_name,
      sb_id = sbid_02_observations,
      sources = "src/sb_utils.R",
      "out_data/XX_observations.zip",
      "out_xml/02_observations.xml"
      )
 
## DRIVER ## 
  ## Build metadata xml for driver and save locally to out_xml
  out_xml/03_drivers.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_03_drivers.yml",
      geospatial_area_metadata
      )
  
  ## Push all driver data + metadata xml to sb via log file 
  log/03_drivers_sb_data.csv:
    command: sb_replace_files(
      filename = target_name,
      sb_id = sbid_03_drivers,
      sources = 'src/sb_utils.R',
      'out_data/XX_driver_data_1.zip',
      'out_data/XX_driver_data_2.zip',
      'out_xml/03_drivers.xml'
      )

## FORECASTS ## 
 ## Build metadata xml for forecasts and save locally to out_xml
  out_xml/04_forecasts.xml:
    command: render(
      filename = target_name,
      "in_text/text_SHARED.yml",
      "in_text/text_04_forecasts.yml",
      geospatial_area_metadata
      )


  ## Push all forecasts data + metadata xml to sb via log file 
  log/04_forecasts_sb_data.csv:
    command: sb_replace_files_log(
      filename = target_name,
      sb_id = sbid_04_forecasts,
      sources = 'src/sb_utils.R',
      'out_data/XX_forecasts1.zip',
      'out_data/XX_forecasts2.zip',
      'out_xml/04_forecasts.xml'
      )

  # ------ SB IDs --------

  sbid_00_parent:
    command: c(I('61ddfd54d34ed79294021ad8')) # XX_sb_id_parent

  sbid_01_spatial:
    command: c(I('636187b3d34ebe44250656b0')) # XX_sb_id_spatial

  sbid_02_observations:
    command: c(I('636187ced34ebe44250656b3')) # XX_sb_id_observations

  sbid_03_drivers:
    command: c(I('6361881bd34ebe44250656b8')) # XX_sb_id_drivers 

  sbid_04_forecasts:
    command: c(I('6361882ed34ebe44250656ba')) # XX_sb_id_forecasts